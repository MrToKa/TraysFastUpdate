@page "/trays/details/{Id:int}"

@rendermode InteractiveAuto

@using TraysFastUpdate.Models
@using TraysFastUpdate.Services
@using TraysFastUpdate.Services.Contracts
@using Excubo.Blazor.Canvas

<PageTitle>Details</PageTitle>

<MudText Typo="Typo.h5" Class="d-flex justify-center flex-grow-1 gap-4">Tray Details</MudText>

<MudItem Class="d-flex justify-center flex-grow-1 ma-2 pa-2">
    <MudButton Href="/trays"
    Rel="nofollow"
    Variant="Variant.Filled"
    Color="Color.Primary">
        Back to List
    </MudButton>
</MudItem>

<MudPaper Elevation="0" Class="pa-1 ma-1">
    <EditForm Model="@TrayModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <MudGrid Class="d-flex justify-center flex-grow-1 gap-4 pa-1 ma-1">
            <MudItem xs="12" sm="7" Class="pa-1 ma-1" Style="@($"background: #BDBDBD;")">
                <MudText Typo="Typo.h6" Class="d-flex justify-center flex-grow-1 gap-4">Tray general information</MudText>
                <MudCard>
                    <MudCardContent>
                        <MudTextField @bind-Value="TrayModel.Name" For="@(() => TrayModel.Name)" Label="Tray Name" ReadOnly="false" />
                        <MudTextField @bind-Value="TrayModel.Type" For="@(() => TrayModel.Type)" Label="Tray Type" ReadOnly="false" />
                        <MudTextField @bind-Value="TrayModel.Purpose" For="@(() => TrayModel.Purpose)" Label="Tray Purpose" ReadOnly="false" />
                        <MudNumericField @bind-Value="TrayModel.Width" For="@(() => TrayModel.Width)" Label="Tray Width [mm]" ReadOnly="false" />
                        <MudNumericField @bind-Value="TrayModel.Height" For="@(() => TrayModel.Height)" Label="Tray Height [mm]" ReadOnly="false" />
                        <MudNumericField @bind-Value="TrayModel.Length" For="@(() => TrayModel.Length)" Label="Tray Length [mm]" ReadOnly="false" />
                        <MudNumericField @bind-Value="TrayModel.Weight" For="@(() => TrayModel.Weight)" Label="Tray Weight [kg/m]" ReadOnly="false" />
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Save changes</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </EditForm>
</MudPaper>

<MudPaper Elevation="0" Class="pa-1 ma-1" Style="@($"background: #BDBDBD;")">
    <MudText Typo="Typo.h6" Class="d-flex justify-center flex-grow-1 gap-4">Cables on tray</MudText>
    @if (CablesOnTray == null || CablesOnTray.Count == 0)
    {
        <MudAlert Severity="Severity.Info">No cables found.</MudAlert>
    }
    else
    {
        <MudDataGrid T="Cable" Items="@CablesOnTray" ReadOnly="true"
        Bordered="true" Dense="true" ColumnResizeMode="ResizeMode.Column">
            <Columns>
                <TemplateColumn Title="No." CellClass="d-flex justify-center" Sortable="false" Filterable="false" Editable="false">
                    <CellTemplate>
                        @(CablesOnTray.IndexOf(context.Item) + 1)
                    </CellTemplate>
                </TemplateColumn>
                <PropertyColumn Property="x => x.Tag" Title="Cable Tag" Hideable="false" />
                <PropertyColumn Property="x => x.CableType.Type" Title="Cable Type" Hideable="false" />
                <PropertyColumn Property="x => x.CableType.Diameter" Title="Cable Diameter [mm]" Hideable="false" />
                <PropertyColumn Property="x => x.CableType.Weight" Title="Cable Weight [kg/m]" Hideable="false" />
            </Columns>
            <PagerContent>
                <MudDataGridPager PageSizeOptions="[15, 25, 50]" T="Cable" />
            </PagerContent>
        </MudDataGrid>
    }
</MudPaper>

<MudPaper>
    <MudGrid Class="d-flex justify-center flex-grow-1 gap-4 pa-1 ma-1">
        <MudItem xs="12" sm="7" Class="pa-1 ma-1" Style="@($"background: #BDBDBD;")">
            <MudText Typo="Typo.h6" Class="d-flex justify-center flex-grow-1 gap-4">Tray Weight Calculations</MudText>
            <MudCard>
                <MudCardContent>
                    <MudTextField @bind-Value="TrayModel.ResultSupportsCount" For="@(() => TrayModel.ResultSupportsCount)" Label="Supports count" ReadOnly="true" />
                    <MudTextField @bind-Value="TrayModel.ResultSupportsTotalWeight" For="@(() => TrayModel.ResultSupportsTotalWeight)" Label="Total Supports Weight [kg]" ReadOnly="true" />
                    <MudTextField @bind-Value="TrayModel.ResultSupportsWeightLoadPerMeter" For="@(() => TrayModel.ResultSupportsWeightLoadPerMeter)" Label="Supports weight load per meter [kg/m]" ReadOnly="true" />
                    <MudTextField @bind-Value="TrayModel.ResultTrayWeightLoadPerMeter" For="@(() => TrayModel.ResultTrayWeightLoadPerMeter)" Label="Tray weight load per meter [kg/m]" ReadOnly="true" />
                    <MudTextField @bind-Value="TrayModel.ResultTrayOwnWeightLoad" For="@(() => TrayModel.ResultTrayOwnWeightLoad)" Label="Tray total own weight [kg]" ReadOnly="true" />
                    <MudTextField @bind-Value="TrayModel.ResultCablesWeightPerMeter" For="@(() => TrayModel.ResultCablesWeightPerMeter)" AutoGrow Lines="5" Label="Cables weight load per meter [kg/m]" ReadOnly="true" />
                    <MudTextField @bind-Value="TrayModel.ResultCablesWeightLoad" For="@(() => TrayModel.ResultCablesWeightLoad)" Label="Cables total weight on the tray [kg]" ReadOnly="true" />
                    <MudTextField @bind-Value="TrayModel.ResultTotalWeightLoadPerMeter" For="@(() => TrayModel.ResultTotalWeightLoadPerMeter)" Label="Total tray weight load per meter [kg/m]" ReadOnly="true" />
                    <MudTextField @bind-Value="TrayModel.ResultTotalWeightLoad" For="@(() => TrayModel.ResultTotalWeightLoad)" Label="Total tray weight [kg]" ReadOnly="true" />
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudPaper>

<MudPaper>
    <MudGrid Class="d-flex justify-center flex-grow-1 gap-4 pa-1 ma-1">
        <MudItem xs="12" sm="7" Class="pa-1 ma-1" Style="@($"background: #BDBDBD;")">
            <MudText Typo="Typo.h6" Class="d-flex justify-center flex-grow-1 gap-4">Tray Space Calculations</MudText>
            <MudCard>
                <MudCardContent>
                    <MudTextField @bind-Value="TrayModel.ResultSpaceOccupied" For="@(() => TrayModel.ResultSpaceOccupied)" AutoGrow Lines="3" Label="Space occupied by cables [mm]" ReadOnly="true" />
                    <MudTextField @bind-Value="TrayModel.ResultSpaceAvailable" For="@(() => TrayModel.ResultSpaceAvailable)" Label="Cable tray free space [%]" ReadOnly="true" />
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudPaper>

<MudPaper>
    <MudItem Class="pa-1 ma-1">
        <Canvas @ref="canvas" id="canvasId" width="@CanvasWidth" height="@CanvasHeight" style="border: 1px solid black; background-color: white;" />
    </MudItem>
</MudPaper>

<MudPaper>
    <MudItem Class="d-flex justify-space-between flex-grow-1 gap-4 pa-1 ma-1">
        <MudButton OnClick="GoToPreviousTray"
        Rel="nofollow"
        Variant="Variant.Filled"
        Color="Color.Primary"
        Disabled="@(_currentTrayIndex <= 0)">
            Previous Tray
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@ExportTrayData">Export Documentation</MudButton>

        <MudButton OnClick="GoToNextTray"
        Rel="nofollow"
        Variant="Variant.Filled"
        Color="Color.Primary"
        Disabled="@(_currentTrayIndex >= TrayIds.Count - 1)">
            Next Tray
        </MudButton>
    </MudItem>
</MudPaper>
